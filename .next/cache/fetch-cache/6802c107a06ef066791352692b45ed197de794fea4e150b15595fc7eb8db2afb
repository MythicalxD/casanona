{"kind":"FETCH","data":{"headers":{"connection":"keep-alive","content-length":"10152","content-security-policy":"connect-src 'self' https:;img-src 'self' data: blob: https://market-assets.strapi.io;media-src 'self' data: blob:;default-src 'self';base-uri 'self';font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline'","content-type":"application/json; charset=utf-8","date":"Sun, 29 Oct 2023 15:02:50 GMT","keep-alive":"timeout=5","referrer-policy":"no-referrer","strict-transport-security":"max-age=31536000; includeSubDomains","vary":"Origin","x-content-type-options":"nosniff","x-dns-prefetch-control":"off","x-download-options":"noopen","x-frame-options":"SAMEORIGIN","x-permitted-cross-domain-policies":"none","x-powered-by":"Strapi <strapi.io>"},"body":"","status":200,"tags":["/(routes)/about/page"],"url":"http://13.200.11.37:1337/api/about-us?populate=*"},"revalidate":31536000}